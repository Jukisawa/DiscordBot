package com.jukisawa.discordBot.dto.lol;

import java.util.Arrays;
import java.util.List;

import org.json.JSONObject;

public record MatchParticipant(
        int champLevel,
        int championId,

        int allInPings,
        int assistMePings,
        int basicPings,
        int commandPings,
        int enemyMissingPings,
        int enemyVisionPings,
        int holdPings,
        int getBackPings,
        int needVisionPings,
        int onMyWayPings,
        int pushPings,
        int visionClearedPings,

        int kills,
        int deaths,
        int assists,
        int doubleKills,
        int tripleKills,
        int quadraKills,
        int pentakills,
        int unrealKills,
        int killingSprees,
        int largestKillingSpree,
        int largestMultiKill,
        int firstBloodAssist,
        int firstBloodKill,

        int baronKills,
        int dragonKills,
        int nexusKills,
        int nexusTakedowns,
        int nexusLost,
        int inhibitorKills,
        int inhibitorTakedowns,
        int inhibitorsLost,
        int turretKills,
        int turretTakedowns,
        int turretsLost,
        int damageDealtToBuildings,
        int damageDealtToObjectives,
        int damageDealtToTurrets,
        int firstTowerAssist,
        int firstTowerKill,
        int objectivesStolen,
        int objectivesStolenAssists,

        int magicDamageDealt,
        int magicDamageDealtToChampions,
        int magicDamageTaken,
        int physicalDamageDealt,
        int physicalDamageDealtToChampions,
        int physicalDamageTaken,
        int trueDamageDealt,
        int trueDamageDealtToChampions,
        int trueDamageTaken,
        int totalDamageDealt,
        int totalDamageDealtToChampions,
        int totalDamageTaken,
        int totalDamageShieldedOnTeammates,
        int totalHeal,
        int totalHealsOnTeammates,
        int totalUnitsHealed,
        int damageSelfMitigated,
        int largestCriticalStrike,
        int longestTimeSpentLiving,
        int totalTimeCCDealt,
        int totalTimeSpentDead,
        int timeCCingOthers,
        int timePlayed,

        int consumablesPurchased,
        int goldEarned,
        int goldSpent,
        List<Integer> items,
        int itemsPurchased,

        int detectorWardsPlaced,
        int visionScore,
        int visionWardsBoughtInGame,
        int wardsKilled,
        int wardsPlaced,

        boolean gameEndedInEarlySurrender,
        boolean gameEndedInSurrender,
        String teamPosition,
        boolean win,

        int neutralMinionsKilled,
        int totalAllyJungleMinionsKilled,
        int totalEnemyJungleMinionsKilled,
        int totalMinionsKilled,

        int spell1Casts,
        int spell2Casts,
        int spell3Casts,
        int spell4Casts,
        int summoner1Casts,
        int summoner1Id,
        int summoner2Casts,
        int summoner2Id) {

    public MatchParticipant(JSONObject participant) {
        this(
                participant.optInt("champLevel", 1),
                participant.optInt("championId", 0),

                participant.optInt("allInPings", 0),
                participant.optInt("assistMePings", 0),
                participant.optInt("basicPings", 0),
                participant.optInt("commandPings", 0),
                participant.optInt("enemyMissingPings", 0),
                participant.optInt("enemyVisionPings", 0),
                participant.optInt("holdPings", 0),
                participant.optInt("getBackPings", 0),
                participant.optInt("needVisionPings", 0),
                participant.optInt("onMyWayPings", 0),
                participant.optInt("pushPings", 0),
                participant.optInt("visionClearedPings", 0),

                participant.optInt("kills", 0),
                participant.optInt("deaths", 0),
                participant.optInt("assists", 0),
                participant.optInt("doubleKills", 0),
                participant.optInt("tripleKills", 0),
                participant.optInt("quadraKills", 0),
                participant.optInt("pentakills", 0),
                participant.optInt("unrealKills", 0),
                participant.optInt("killingSprees", 0),
                participant.optInt("largestKillingSpree", 0),
                participant.optInt("largestMultiKill", 0),
                participant.optInt("firstBloodAssist", 0),
                participant.optInt("firstBloodKill", 0),

                participant.optInt("baronKills", 0),
                participant.optInt("dragonKills", 0),
                participant.optInt("nexusKills", 0),
                participant.optInt("nexusTakedowns", 0),
                participant.optInt("nexusLost", 0),
                participant.optInt("inhibitorKills", 0),
                participant.optInt("inhibitorTakedowns", 0),
                participant.optInt("inhibitorsLost", 0),
                participant.optInt("turretKills", 0),
                participant.optInt("turretTakedowns", 0),
                participant.optInt("turretsLost", 0),
                participant.optInt("damageDealtToBuildings", 0),
                participant.optInt("damageDealtToObjectives", 0),
                participant.optInt("damageDealtToTurrets", 0),
                participant.optInt("firstTowerAssist", 0),
                participant.optInt("firstTowerKill", 0),
                participant.optInt("objectivesStolen", 0),
                participant.optInt("objectivesStolenAssists", 0),

                participant.optInt("magicDamageDealt", 0),
                participant.optInt("magicDamageDealtToChampions", 0),
                participant.optInt("magicDamageTaken", 0),
                participant.optInt("physicalDamageDealt", 0),
                participant.optInt("physicalDamageDealtToChampions", 0),
                participant.optInt("physicalDamageTaken", 0),
                participant.optInt("trueDamageDealt", 0),
                participant.optInt("trueDamageDealtToChampions", 0),
                participant.optInt("trueDamageTaken", 0),
                participant.optInt("totalDamageDealt", 0),
                participant.optInt("totalDamageDealtToChampions", 0),
                participant.optInt("totalDamageTaken", 0),
                participant.optInt("totalDamageShieldedOnTeammates", 0),
                participant.optInt("totalHeal", 0),
                participant.optInt("totalHealsOnTeammates", 0),
                participant.optInt("totalUnitsHealed", 0),
                participant.optInt("damageSelfMitigated", 0),
                participant.optInt("largestCriticalStrike", 0),
                participant.optInt("longestTimeSpentLiving", 0),
                participant.optInt("totalTimeCCDealt", 0),
                participant.optInt("totalTimeSpentDead", 0),
                participant.optInt("timeCCingOthers", 0),
                participant.optInt("timePlayed", 0),
                participant.optInt("consumablesPurchased", 0),
                participant.optInt("goldEarned", 0),
                participant.optInt("goldSpent", 0),
                Arrays.asList(
                        participant.optInt("item0"),
                        participant.optInt("item1"),
                        participant.optInt("item2"),
                        participant.optInt("item3"),
                        participant.optInt("item4"),
                        participant.optInt("item5"),
                        participant.optInt("item6")),
                participant.optInt("itemsPurchased", 0),
                participant.optInt("detectorWardsPlaced", 0),

                participant.optInt("visionScore", 0),
                participant.optInt("visionWardsBoughtInGame", 0),
                participant.optInt("wardsKilled", 0),
                participant.optInt("wardsPlaced", 0),

                participant.optBoolean("gameEndedInEarlySurrender", false),
                participant.optBoolean("gameEndedInSurrender", false),
                participant.optString("teamPosition", "Unknown"),
                participant.optBoolean("win", false),
                participant.optInt("neutralMinionsKilled", 0),
                participant.optInt("totalAllyJungleMinionsKilled", 0),
                participant.optInt("totalEnemyJungleMinionsKilled", 0),
                participant.optInt("totalMinionsKilled", 0),
                participant.optInt("spell1Casts", 0),
                participant.optInt("spell2Casts", 0),
                participant.optInt("spell3Casts", 0),
                participant.optInt("spell4Casts", 0),
                participant.optInt("summoner1Casts", 0),
                participant.optInt("summoner1Id", 0),
                participant.optInt("summoner2Casts", 0),
                participant.optInt("summoner2Id", 0));

    }
}
